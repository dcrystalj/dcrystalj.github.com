<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>queues on dcrystalj</title><link>https://www.tomazic.pro/tags/queues/</link><description>Recent content in queues on dcrystalj</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sun, 27 Nov 2022 19:08:04 +0200</lastBuildDate><atom:link href="https://www.tomazic.pro/tags/queues/index.xml" rel="self" type="application/rss+xml"/><item><title>Prioritizing celery tasks with different queues</title><link>https://www.tomazic.pro/blog/prioritizing-celery-tasks/</link><pubDate>Sun, 27 Nov 2022 19:08:04 +0200</pubDate><guid>https://www.tomazic.pro/blog/prioritizing-celery-tasks/</guid><description>Celery supports prioritization within each queue, but what if you want to reserve premium resource allocations for some tasks? You can move some traffic to other queue where worker with better resources take tasks from it.
Example Lets say we have 2 functions a and b. We can set them default queues like public and private through task decorator correspondingly.
@app.task(queue=&amp;#34;public&amp;#34;) def a(x, y): print(f&amp;#34;Printing from fn &amp;#39;a&amp;#39;: {x + y}&amp;#34;) @app.</description></item></channel></rss>